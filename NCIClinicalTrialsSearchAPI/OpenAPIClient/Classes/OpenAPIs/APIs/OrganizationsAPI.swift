//
// OrganizationsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class OrganizationsAPI {

    /**
     Search Organizations by GET
     
     - parameter name: (query)  (optional)
     - parameter contactName: (query)  (optional)
     - parameter contactEmail: (query)  (optional)
     - parameter contactPhone: (query)  (optional)
     - parameter orgAddressLine1: (query)  (optional)
     - parameter orgAddressLine2: (query)  (optional)
     - parameter orgCity: (query)  (optional)
     - parameter orgCountry: (query)  (optional)
     - parameter orgEmail: (query)  (optional)
     - parameter orgPhone: (query)  (optional)
     - parameter orgFax: (query)  (optional)
     - parameter orgTty: (query)  (optional)
     - parameter orgStateOrProvince: (query)  (optional)
     - parameter orgVa: (query)  (optional)
     - parameter orgPostalCode: (query)  (optional)
     - parameter orgFamily: (query)  (optional)
     - parameter orgCoordinatesLat: (query) Organization&#39;s Latitude - for example: 43.7029 (optional)
     - parameter orgCoordinatesLon: (query) Organization&#39;s Longitude - for example: -72.2895 (optional)
     - parameter orgCoordinatesDist: (query) The radius around a given geolocation. The geolocation can be provided by using both org_coordinates_lon and org_coordinates_lat, as described above, OR by specifying the zip code org_postal_code, at which point the geolocation will be calculated for you. We only support miles or kilometers for distance: for example org_coordinates_dist&#x3D;25mi or org_coordinates_dist&#x3D;25km. Geolocation Search only works to find sites in the United States. If not provided with geolocation parameters, currently defaults to 0.67mi to provide &#39;at location&#39; results. (optional)
     - parameter include: (query) Include only this field(s) in trials and exclude others. Use multiple times to include multiple fields.  (Useful if you want to minimize the payload returned) (optional)
     - parameter sort: (query) Default set to &#39;name&#39;. Currently works only for &lt;code&gt;name&lt;/code&gt;. (optional)
     - parameter order: (query) Asc or Desc. Required when using &lt;code&gt;sort&lt;/code&gt;. (optional)
     - parameter size: (query) Not using the size parameter, by default, will give you ALL the results AND, in addition, will give you the &#39;total&#39; field in the results, with the total count of the results. Once you do use the size parameter however, the number of results will be according to the size specified, AND, in addition, the &#39;total&#39; field will not exist in your results. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func searchOrganizationsByGet(name: String? = nil, contactName: String? = nil, contactEmail: String? = nil, contactPhone: String? = nil, orgAddressLine1: String? = nil, orgAddressLine2: String? = nil, orgCity: String? = nil, orgCountry: String? = nil, orgEmail: String? = nil, orgPhone: String? = nil, orgFax: String? = nil, orgTty: String? = nil, orgStateOrProvince: String? = nil, orgVa: String? = nil, orgPostalCode: String? = nil, orgFamily: String? = nil, orgCoordinatesLat: Double? = nil, orgCoordinatesLon: Double? = nil, orgCoordinatesDist: String? = nil, include: String? = nil, sort: String? = nil, order: String? = nil, size: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return searchOrganizationsByGetWithRequestBuilder(name: name, contactName: contactName, contactEmail: contactEmail, contactPhone: contactPhone, orgAddressLine1: orgAddressLine1, orgAddressLine2: orgAddressLine2, orgCity: orgCity, orgCountry: orgCountry, orgEmail: orgEmail, orgPhone: orgPhone, orgFax: orgFax, orgTty: orgTty, orgStateOrProvince: orgStateOrProvince, orgVa: orgVa, orgPostalCode: orgPostalCode, orgFamily: orgFamily, orgCoordinatesLat: orgCoordinatesLat, orgCoordinatesLon: orgCoordinatesLon, orgCoordinatesDist: orgCoordinatesDist, include: include, sort: sort, order: order, size: size).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Search Organizations by GET
     - GET /organizations
     - <h3>GET organizations?&lt;filter_params&gt;</h3><p>The <code>organizations</code> endpoint is intended for typeaheads and other use cases where it is necessary to search for available organizations which can later be used to filter clinical trial results. Organizations are matched partially by supplying a string to the <code>name</code> field and may be filtered by other fields through parameters described below. Results are sorted by a combination of in alphabetical order by default i.e sort is set to name and order is set to asc.</p><p>Example: <font class=\"example\" color=\"#0000FF\" style=\"word-wrap: break-word;\">organizations?org_city=Las Vegas&org_country=United States&name=University</font></p><p><b>Progressive Filtering functionality:</b> All trial fields parameters described at the <b>/trials</b> endpoint are usable here to filter the trials from which you want to aggregate. For example, if you request <b>/organizations?maintype=C4872</b> this will give you all organizations that are in trials where Breast Cancer(C4872) is among the diseases in each trial. Note that <b>maintype</b> is a trials endpoint parameter related to <b>diseases.nci_thesaurus_concept_id</b>.</p><hr>
     - API Key:
       - type: apiKey X-API-KEY (HEADER)
       - name: ApiKeyAuth
     - parameter name: (query)  (optional)
     - parameter contactName: (query)  (optional)
     - parameter contactEmail: (query)  (optional)
     - parameter contactPhone: (query)  (optional)
     - parameter orgAddressLine1: (query)  (optional)
     - parameter orgAddressLine2: (query)  (optional)
     - parameter orgCity: (query)  (optional)
     - parameter orgCountry: (query)  (optional)
     - parameter orgEmail: (query)  (optional)
     - parameter orgPhone: (query)  (optional)
     - parameter orgFax: (query)  (optional)
     - parameter orgTty: (query)  (optional)
     - parameter orgStateOrProvince: (query)  (optional)
     - parameter orgVa: (query)  (optional)
     - parameter orgPostalCode: (query)  (optional)
     - parameter orgFamily: (query)  (optional)
     - parameter orgCoordinatesLat: (query) Organization&#39;s Latitude - for example: 43.7029 (optional)
     - parameter orgCoordinatesLon: (query) Organization&#39;s Longitude - for example: -72.2895 (optional)
     - parameter orgCoordinatesDist: (query) The radius around a given geolocation. The geolocation can be provided by using both org_coordinates_lon and org_coordinates_lat, as described above, OR by specifying the zip code org_postal_code, at which point the geolocation will be calculated for you. We only support miles or kilometers for distance: for example org_coordinates_dist&#x3D;25mi or org_coordinates_dist&#x3D;25km. Geolocation Search only works to find sites in the United States. If not provided with geolocation parameters, currently defaults to 0.67mi to provide &#39;at location&#39; results. (optional)
     - parameter include: (query) Include only this field(s) in trials and exclude others. Use multiple times to include multiple fields.  (Useful if you want to minimize the payload returned) (optional)
     - parameter sort: (query) Default set to &#39;name&#39;. Currently works only for &lt;code&gt;name&lt;/code&gt;. (optional)
     - parameter order: (query) Asc or Desc. Required when using &lt;code&gt;sort&lt;/code&gt;. (optional)
     - parameter size: (query) Not using the size parameter, by default, will give you ALL the results AND, in addition, will give you the &#39;total&#39; field in the results, with the total count of the results. Once you do use the size parameter however, the number of results will be according to the size specified, AND, in addition, the &#39;total&#39; field will not exist in your results. (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func searchOrganizationsByGetWithRequestBuilder(name: String? = nil, contactName: String? = nil, contactEmail: String? = nil, contactPhone: String? = nil, orgAddressLine1: String? = nil, orgAddressLine2: String? = nil, orgCity: String? = nil, orgCountry: String? = nil, orgEmail: String? = nil, orgPhone: String? = nil, orgFax: String? = nil, orgTty: String? = nil, orgStateOrProvince: String? = nil, orgVa: String? = nil, orgPostalCode: String? = nil, orgFamily: String? = nil, orgCoordinatesLat: Double? = nil, orgCoordinatesLon: Double? = nil, orgCoordinatesDist: String? = nil, include: String? = nil, sort: String? = nil, order: String? = nil, size: Int? = nil) -> RequestBuilder<Void> {
        let localVariablePath = "/organizations"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "name": (wrappedValue: name?.encodeToJSON(), isExplode: true),
            "contact_name": (wrappedValue: contactName?.encodeToJSON(), isExplode: true),
            "contact_email": (wrappedValue: contactEmail?.encodeToJSON(), isExplode: true),
            "contact_phone": (wrappedValue: contactPhone?.encodeToJSON(), isExplode: true),
            "org_address_line_1": (wrappedValue: orgAddressLine1?.encodeToJSON(), isExplode: true),
            "org_address_line_2": (wrappedValue: orgAddressLine2?.encodeToJSON(), isExplode: true),
            "org_city": (wrappedValue: orgCity?.encodeToJSON(), isExplode: true),
            "org_country": (wrappedValue: orgCountry?.encodeToJSON(), isExplode: true),
            "org_email": (wrappedValue: orgEmail?.encodeToJSON(), isExplode: true),
            "org_phone": (wrappedValue: orgPhone?.encodeToJSON(), isExplode: true),
            "org_fax": (wrappedValue: orgFax?.encodeToJSON(), isExplode: true),
            "org_tty": (wrappedValue: orgTty?.encodeToJSON(), isExplode: true),
            "org_state_or_province": (wrappedValue: orgStateOrProvince?.encodeToJSON(), isExplode: true),
            "org_va": (wrappedValue: orgVa?.encodeToJSON(), isExplode: true),
            "org_postal_code": (wrappedValue: orgPostalCode?.encodeToJSON(), isExplode: true),
            "org_family": (wrappedValue: orgFamily?.encodeToJSON(), isExplode: true),
            "org_coordinates_lat": (wrappedValue: orgCoordinatesLat?.encodeToJSON(), isExplode: true),
            "org_coordinates_lon": (wrappedValue: orgCoordinatesLon?.encodeToJSON(), isExplode: true),
            "org_coordinates_dist": (wrappedValue: orgCoordinatesDist?.encodeToJSON(), isExplode: true),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: true),
            "sort": (wrappedValue: sort?.encodeToJSON(), isExplode: true),
            "order": (wrappedValue: order?.encodeToJSON(), isExplode: true),
            "size": (wrappedValue: size?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
